spring:
  profiles:
    active: "prod"

server:
  port: 8080
  servlet:
    context-path: /bank-account/api

---

spring:
  config:
    activate:
      on-profile: "dev"

  h2:
    console:
      enabled: true
      path: /h2-console
  datasource:
    url: jdbc:h2:mem:webapp
    username: sa
    password:
    driver-class-name: org.h2.Driver

  sql:
    init:
      mode: ALWAYS

        #security:
        #oauth2:
        #client:
        #registration:
        #api-client-oidc:
        #provider: spring
        #client-id: api-client
        #client-secret: secret
        #authorization-grant-type: authorization_code
        #redirect-uri: "http://127.0.0.1:5435/login/oauth2/code/{registrationId}"
        #scope: openid
        #client-name: api-client-oidc
        #api-client-authorization-code:
        #provider: spring
        #client-id: api-client
        #client-secret: secret
        #authorization-grant-type: authorization_code
        #redirect-uri: "http://127.0.0.1:5435/authorized"
        #scope: api.read
        #client-name: api-client-authorization-code
        #provider:
        #spring:
      #issuer-uri: http://auth-server:9000

---

spring:
  config:
    activate:
      on-profile: "prod"

  datasource:
    platform: postgres
    url: jdbc:postgresql://localhost:5432/bank-account?createDatabaseIfNotExist=true
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver

  jpa:
    database: POSTGRESQL
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL81Dialect

  security:
    oauth2:
      client:
        registration:
          api-client-oidc:
            provider: spring
            client-id: api-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:8080/login/oauth2/code/{registrationId}"
            scope: openid
            client-name: api-client-oidc

          api-client-authorization-code:
            provider: spring
            client-id: api-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:8080/authorized"
            scope: api.read
            client-name: api-client-authorization-code
        provider:
          spring:
            #token-uri: "http://auth-server:9000/token"
            issuer-uri: "http://auth-server:9000"

---


